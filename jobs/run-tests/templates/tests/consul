#!/bin/bash
source /var/vcap/jobs/run-tests/lib/functions consul

setkey() {
  local url=$1
  local key=$2
  local val=$3

  if [[ -z $(getkey $key) ]]; then
    echo "   creating new key '$key' with value '$val'"
  else
    echo "   changing key '$key' from '$(getkey $url $key)' -> '$val'"
  fi
  curl -sLk -XPUT $url/v1/kv/$key -d "$val" >/dev/null
}
getkey() {
  curl -sLk $1/v1/kv/$2 | jq -r '.[].Value' | base64 -d
}
delkey() {
  curl -sLk $1/v1/kv/$2 -X DELETE
}
dumpkeys() {
  local url=$1
  shift
  for k in "$@"; do
    echo "    - $k = '$(getkey $url $k)'"
  done
}

run_tests() {
	local target=$1
	local url=$2
	local rc=0

	echo ">> setting up test data"
	setkey $url test1 foo
	setkey $url test2 bar
	delkey $url test3
	dumpkeys $url test1 test2 test3
	echo

	if [[ $(getkey $url test1) != "foo" ]]; then
		echo "!! test1 key was not initialized properly"
		echo "     '$(getkey $url test1)' != 'foo'"
		echo
		rc=1
	fi

	if [[ $(getkey $url test2) != "bar" ]]; then
		echo "!! test2 key was not initialized properly"
		echo "     '$(getkey $url test2)' != 'bar'"
		echo
		rc=1
	fi

	if [[ -n $(getkey $url test3) ]]; then
		echo "!! test3 should not exist yet"
		echo
		rc=1
	fi

	echo ">> running backup job"
	wait_for_task $(shield run $(shield job ${target}-daily | jq -r '.uuid') | jq -r '.task_uuid')
	echo

	echo ">> trashing the data"
	setkey $url test1 "this is incorrect"
	setkey $url test3 new-key $url
	dumpkeys $url test1 test2 test3
	echo

	echo ">> restoring from backups"
	wait_for_task $(shield restore $(shield archives -t $(shield target consul | jq -r '.uuid') | jq -r '.[0].uuid') | jq -r '.task_uuid')
	echo

	echo ">> verifying data, post-restore"
	dumpkeys $url test1 test2 test3
	echo

	if [[ $(getkey $url test1) != "foo" ]]; then
		echo "!! test1 key was not restored properly"
		echo "     '$(getkey $url test1)' != 'foo'"
		echo
		rc=1
	fi

	if [[ $(getkey $url test2) != "bar" ]]; then
		echo "!! test2 key was not restored properly"
		echo "     '$(getkey $url test2)' != 'bar'"
		echo
		rc=1
	fi

	if [[ $(getkey $url test3) != "new-key" ]]; then
		echo "!! test3 key was deleted (or modified) when we restored"
		echo
		rc=1
	fi
	return $rc;
}

rc=0
cat <<EOF


 ######   #######  ##    ##  ######  ##     ## ##
##    ## ##     ## ###   ## ##    ## ##     ## ##
##       ##     ## ####  ## ##       ##     ## ##
##       ##     ## ## ## ##  ######  ##     ## ##
##       ##     ## ##  ####       ## ##     ## ##
##    ## ##     ## ##   ### ##    ## ##     ## ##
 ######   #######  ##    ##  ######   #######  ########


EOF
echo ">> configuring SHIELD"
shield create-target <<EOF | jq -r .
{
  "name"     : "consul",
  "summary"  : "Consul",
  "plugin"   : "consul",
  "endpoint" : "{}",
  "agent"    : "$TARGET:5444"
}
EOF
shield create-target <<EOF | jq -r .
{
  "name"     : "consul-ssl",
  "summary"  : "Consul with SSL",
  "plugin"   : "consul",
  "endpoint" : "{\"host\":\"https://localhost:8500\",\"skip_ssl_validation\":true}",
  "agent"    : "$TARGET:5444"
}
EOF
shield create-job <<EOF | jq -r .
{
  "name"      : "consul-daily",
  "summary"   : "Consul",
  "paused"    : true,
  "retention" : "$RETENTION_UUID",
  "schedule"  : "$SCHEDULE_UUID",
  "store"     : "$STORE_UUID",
  "target"    : "$(shield target consul | jq -r '.uuid')"
}
EOF
shield create-job <<EOF | jq -r .
{
  "name"      : "consul-ssl-daily",
  "summary"   : "Consul SSL",
  "paused"    : true,
  "retention" : "$RETENTION_UUID",
  "schedule"  : "$SCHEDULE_UUID",
  "store"     : "$STORE_UUID",
  "target"    : "$(shield target consul-ssl | jq -r '.uuid')"
}
EOF
echo

echo ">> Testing Consul"
run_tests consul http://$TARGET:8500
rc=$?

echo ">> Testing Consul with SSL"
run_tests consul-ssl https://$TARGET:8501
rc=$(($rc + $?))

exit $rc
