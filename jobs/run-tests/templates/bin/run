#!/bin/bash
set -eu
exec 2>&1
test -z "${ERRAND_DEBUG:-<% if p('debug') %>1<% end %>}" || set -x

export TMP=/var/vcap/sys/tmp ; mkdir -p $TMP
export SHIELD_API_TOKEN='WE-ARE-LEGION'
export TARGET=<%= p('target') %>
for pkg in consul mariadb mongodb postgres shield jq awscli; do
  export PATH=$PATH:/var/vcap/packages/$pkg/bin
done

echo "################################################################"
echo "#"
echo "# SHIELD '<%= link('shield').instances[0].name %>'"
echo "#     at <%= link('shield').instances[0].address %>"
echo "#"
echo "################################################################"
echo

AWS_ACCESS_KEY="<%= p('aws.access_key') %>"
AWS_SECRET_KEY="<%= p('aws.secret_key') %>"
# configure AWS # {{{
BUCKET=$(dd if=/dev/urandom bs=1 count=32 2>/dev/null | sha1sum | awk '{print $1}')-phalanx
echo "CREATING NEW AWS BUCKET '$BUCKET'"
echo "> Configuring AWS CLI"
rm -rf ~/.aws ; mkdir ~/.aws
cat >~/.aws/config <<EOF
[default]
EOF
cat >~/.aws/credentials <<EOF
[default]
aws_access_key_id = $AWS_ACCESS_KEY
aws_secret_access_key = $AWS_SECRET_KEY
EOF
echo "> Creating AWS bucket '$BUCKET'"
aws s3 mb s3://$BUCKET
echo
# }}}
# configure SHIELD # {{{
echo "CONFIGURING SHIELD AT <%= shield['ip'] %>"
echo "> Targeting backend at <%= shield['ip'] %>"
buckler api test http://<%= link('shield').instances[0].address %>:8080
export SHIELD_CORE=test
export SHIELD_TENANT=tenant1
buckler login -u smoke -p tests
echo "> Clearing out any previous Jobs / Stores / Targets / Retention"
(
 for uuid in $(buckler jobs      --json | jq -r '.[].uuid'); do buckler delete-job      $uuid ; done
 for uuid in $(buckler stores    --json | jq -r '.[].uuid'); do buckler delete-store    $uuid ; done
 for uuid in $(buckler targets   --json | jq -r '.[].uuid'); do buckler delete-target   $uuid ; done
 for uuid in $(buckler policies  --json | jq -r '.[].uuid'); do buckler delete-policy   $uuid ; done
)&>/dev/null
echo "> Creating short-term Retention Policy"
buckler create-policy \
  --name     short-term \
  --summary "Short-Term Retention" \
  --days     1

echo "> Configuring s3-store Storage"
buckler create-store \
  --name     s3-store \
  --summary "Default S3 Storage" \
  --plugin   s3 \
  --agent    127.0.0.1:5444
  --data    "access_key_id=$AWS_ACCESS_KEY" \
  --data    "secret_access_key=$AWS_SECRET_KEY" \
  --data    "bucket=$BUCKET" \
  --data    "prefix=phalanx"

# }}}
# run TESTS {{{
echo "RUNNING TARGET TESTS"
failed=0
rm -f $TMP/FAILURE $TMP/SUCCESS
for run in /var/vcap/jobs/run-tests/tests/*; do
	job=${run##*/}
	chmod 0755 $run
	if ! $run $*; then
		failed=$(( failed + 1 ))
		echo "- $job failed" >>$TMP/FAILURE
	else
		echo
		echo "$job succeeded" | tr a-z A-Z
		echo "- $job OK" >>$TMP/SUCCESS
		echo
	fi
done
echo
# }}}
# teardown AWS # {{{
echo
echo "CLEANING UP AWS BUCKET '$BUCKET'"
echo "> Removing all files in AWS bucket '$BUCKET'"
aws s3 rm --recursive s3://$BUCKET
echo "> Removing AWS bucket '$BUCKET'"
aws s3 rb s3://$BUCKET
# }}}


<% end %>
echo
echo
echo "DONE"
if [[ $failed -eq 0 ]]; then
	echo "ALL TESTS PASSED"
	echo "----------------------------------"
	cat $TMP/SUCCESS
	echo "----------------------------------"
	echo
	echo "SHIELD IS OKAY TO RELEASE"
	exit 0
else
	echo "$failed TEST(S) FAILED!"
	echo "----------------------------------"
	cat $TMP/FAILURE
	echo "----------------------------------"
	echo
	echo "SHIELD CANNOT BE RELEASED UNTIL THIS IS FIXED"
	exit 1
fi
# vim:ft=bash
