#!/bin/bash
set -eu
exec 2>&1
test -z "${ERRAND_DEBUG:-<% if p('debug') %>1<% end %>}" || set -x

export TMP=/var/vcap/sys/tmp ; mkdir -p $TMP
export SHIELD_API_TOKEN='WE-ARE-LEGION'
export TARGET=<%= p('target') %>
for pkg in consul mariadb mongodb postgres shield jq; do
  export PATH=$PATH:/var/vcap/packages/$pkg/bin
done

<% p('shields').each_with_index do |shield,i| %>
echo "################################################################"
echo "#"
echo "# SHIELD '<%= shield['name'] %>'"
echo "#     at <%= shield['ip'] %>"
echo "#"
echo "################################################################"
echo

# configure SHIELD # {{{
echo "CONFIGURING SHIELD AT <%= shield['ip'] %>"
echo "> Targeting backend s<%= i %> at <%= shield['ip'] %>"
shield create-backend s<%= i %> http://<%= shield['ip'] %>:8080
shield backend s<%= i %>
echo "> Clearing out any previous Jobs / Stores / Targets / Schedules / Retention"
(
 for uuid in $(shield jobs      --raw | jq -r '.[].uuid'); do shield delete-job      --raw $uuid ; done
 for uuid in $(shield stores    --raw | jq -r '.[].uuid'); do shield delete-store    --raw $uuid ; done
 for uuid in $(shield targets   --raw | jq -r '.[].uuid'); do shield delete-target   --raw $uuid ; done
 for uuid in $(shield schedules --raw | jq -r '.[].uuid'); do shield delete-schedule --raw $uuid ; done
 for uuid in $(shield policies  --raw | jq -r '.[].uuid'); do shield delete-policy   --raw $uuid ; done
)&>/dev/null
echo "> Creating daily-schedule Schedule"
shield create-schedule --raw <<EOF
{
  "name"    : "daily-schedule",
  "summary" : "Default Schedule",
  "when"    : "daily 4am"
}
EOF
echo "> Creating short-term Retention Policy"
shield create-policy --raw <<EOF
{
  "name"    : "short-term",
  "summary" : "Short-term Retention",
  "expires" : 3600
}
EOF
echo "> Configuring fs-store Storage"
shield create-store --raw <<EOF
{
  "name"     : "fs-store",
  "summary"  : "Default Filesystem Storage",
  "plugin"   : "fs",
  "endpoint" : "{\"base_dir\":\"/var/vcap/store/shield/fs\"}",
  "agent"    : "127.0.0.1:5444"
}
EOF
echo "> Finding UUIDs"
export SCHEDULE_UUID=$( shield schedule daily-schedule --raw | jq -r '.uuid')
export RETENTION_UUID=$(shield policy   short-term     --raw | jq -r '.uuid')
export STORE_UUID=$(    shield store    fs-store       --raw | jq -r '.uuid')
echo "  - SCHEDULE  = $SCHEDULE_UUID"
echo "  - RETENTION = $RETENTION_UUID"
echo "  - STORE     = $STORE_UUID"
echo
# }}}
echo "RUNNING TARGET TESTS"
failed=0
rm -f $TMP/FAILURE $TMP/SUCCESS
for run in /var/vcap/jobs/run-tests/tests/*; do
	job=${run##*/}
	chmod 0755 $run
	if ! $run $*; then
		failed=$(( failed + 1 ))
		echo "- $job failed" >>$TMP/FAILURE
	else
		echo
		echo "$job succeeded" | tr a-z A-Z
		echo "- $job OK" >>$TMP/SUCCESS
		echo
	fi
done


<% end %>
echo
echo
echo "DONE"
if [[ $failed -eq 0 ]]; then
	echo "ALL TESTS PASSED"
	echo "----------------------------------"
	cat $TMP/SUCCESS
	echo "----------------------------------"
	echo
	echo "SHIELD IS OKAY TO RELEASE"
	exit 0
else
	echo "$failed TEST(S) FAILED!"
	echo "----------------------------------"
	cat $TMP/FAILURE
	echo "----------------------------------"
	echo
	echo "SHIELD CANNOT BE RELEASED UNTIL THIS IS FIXED"
	exit 1
fi
# vim:ft=bash
